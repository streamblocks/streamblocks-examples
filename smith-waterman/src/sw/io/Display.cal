namespace sw.io:

    import all sw.configuration;
    import all sw.utils;
    import var system.io.print_s;
    import var system.io.print_i;

    actor Display () 
        uint(size=3) AL_REF,
        uint(size=3) AL_READ,
        int(size=16) SCORE
        ==> :

        List(type:uint(size=3), size=MAX_STRING_SIZE) stringA;

        List(type:uint(size=3), size=MAX_STRING_SIZE) stringB;

        int(size=16) score;

        uint(size=8) sizeA := 0;

        uint(size=8) sizeB := 0;
        
        int alignementCounter := 0;

        bool hasScore := false;

        bool hasA := false;

        bool hasB := false;

        getScore: action SCORE:[ v ] ==>
        guard
            not hasScore
        do
            score := v;
            hasScore := true;
        end

        getStringA: action AL_REF:[ a ] ==>
        guard
            not hasA
        do
            stringA[sizeA] := a;
            sizeA := sizeA + 1;
            if (a = EOS) then
                hasA := true;
            end
        end

        getStringB: action AL_READ:[ b ] ==>
        guard
            not hasB
        do
            stringB[sizeB] := b;
            sizeB := sizeB + 1;
            if (b = EOS) then
                hasB := true;
            end
        end

        printResult: action ==>
        guard
            hasScore and hasA and hasB
        do
            alignementCounter := alignementCounter + 1;
            print_s("Alignement: ");
            print_i(alignementCounter);
            print_s(" >> score: ");
            print_i(score);
            print_s("\n  REF: ");
            foreach int i in 0 .. sizeA - 1 do
                printChar(stringA[i]);
            end
            print_s("\n READ: ");
            foreach int i in 0 .. sizeB - 1 do
                printChar(stringB[i]);
            end
            print_s("\n\n");
            sizeA := 0;
            sizeB := 0;
            hasScore := false;
            hasA := false;
            hasB := false;
        end

    end
end