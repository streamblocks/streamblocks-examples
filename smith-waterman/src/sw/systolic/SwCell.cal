namespace sw.systolic:

    import all sw.configuration;
    import all sw.utils;

    actor SwCell()
        int(size=16) IN_LEFT,
        uint(size=3) REF,
        uint(size=3) READ 
        ==>
        int(size=16) V:

        // the SW algorithm parameters
        int(size=16) GAP = -3;
        int(size=16) MATCH = 5;
        int(size=16) MISMATCH = -3;

        // state variables
        int(size=16) diagonal := 0;
        int(size=16) up := 0;


        action IN_LEFT:[ left ] , REF:[ a ] , READ:[ b ] ==> V:[ v ]
	    var
		    int(size=16) v, int(size=16) v1, int(size=16) v2, int(size=16) v3
	    do
            if (b = EOS) then
                v := 0 | UNDEFINED;
                diagonal := 0;
                up := 0;
            else
                left := left & MASK_VALUE;
                v1 := (if a = b then MATCH else MISMATCH end) + diagonal;
                v2 := left + GAP;
                v3 := up + GAP;
                v := max4(0, v2, v3, v1);
                    
                diagonal := left;
                up := v;
                
                // compute direction
                if (v = v1) then
                    v := v | DIAGONAL;
                else
                    if (v = v2) then
                        v := v | LEFT;
                    else
                        if (v = v3) then
                            v := v | UP;
                        else
                            v := v | UNDEFINED;
                        end
                    end
                end
            end
        end
        
    end

end