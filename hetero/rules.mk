
# Rules to make heterogeneous network
$(ENTITY_NETWORK)_HLS: $(CAL_DEPS)
	$(SB_BIN) vivado-hls $(COMMON_SETTINGS) $(HLS_SETTINGS) $(SOURCE_PATH_SETTINGS) --target-path $(TARGET_PATH) $(ENTITY)


$(ENTITY_NETWORK)_MULTICORE: $(CAL_DEPS)
	$(SB_BIN) multicore $(COMMON_SETTINGS) $(MULTICORE_SETTIGS) $(SOURCE_PATH_SETTINGS) --target-path $(TARGET_PATH) $(ENTITY)



$(ENTITY_NETWORK):$(ENTITY_NETWORK)_HLS $(ENTITY_NETWORK)_MULTICORE 
	

# Rule to make software only network

$(ENTITY_NETWORK)_SOFTWARE: $(CAL_DEPS)
	$(SB_BIN) multicore $(MULTICORE_SETTIGS) $(SOURCE_PATH_SETTINGS) --target-path $(TARGET_PATH) $(ENTITY)



# Rule to run partitioning on a network with profiling information available


ifeq ($(PROFILING_TARGET_PATH),)
PROFILING_TARGET_PATH := $(TARGET_PATH)/profiling
endif

SC_PROFILE_TARGET_PATH := $(PROFILING_TARGET_PATH)/sc
SW_PROFILE_TARGET_PATH := $(PROFILING_TARGET_PATH)/sw

# Rules to make SystemC simulator
$(ENTITY_NETWORK)_HLS_SYSTEMC: $(CAL_DEPS)
	$(SB_BIN) vivado-hls $(SYSTEMC_SETTIGNS) $(COMMON_SETTINGS) $(HLS_SETTINGS) $(SOURCE_PATH_SETTINGS) --target-path $(SC_PROFILE_TARGET_PATH) $(ENTITY)

$(ENTITY_NETWORK)_MULTICORE_SYSTEMC: $(CAL_DEPS)
	$(SB_BIN) multicore $(SYSTEMC_SETTIGNS) $(COMMON_SETTINGS)  $(MULTICORE_SETTIGS) $(SOURCE_PATH_SETTINGS) --target-path $(SC_PROFILE_TARGET_PATH) $(ENTITY)


$(ENTITY_NETWORK)_SYSTEMC: $(ENTITY_NETWORK)_MULTICORE_SYSTEMC $(ENTITY_NETWORK)_HLS_SYSTEMC
	cd $(SC_PROFILE_TARGET_PATH); \
	mkdir -p build; \
	cd build; \
	$(CMAKE) .. -DCMAKE_BUILD_TYPE=Release -DHLS_CLOCK_PERIOD=$(HLS_CLOCK_PERIOD); \
	make $(ENTITY_NETWORK) -j



$(ENTITY_NETWORK)_MULTICORE_PROFILING: $(CAL_DEPS) 
	$(SB_BIN) multicore $(MULTICORE_SETTIGS) $(SOURCE_PATH_SETTINGS) --target-path $(SW_PROFILE_TARGET_PATH) $(ENTITY); \
	cd $(SW_PROFILE_TARGET_PATH)/build; \
	$(CMAKE) .. -DCMAKE_BUILD_TYPE=Release -DDISPLAY=off; \
	make $(ENTITY_NETWORK) -j;


ifneq ($(SW_PARTITIONING_SETTINGS),)
$(ENTITY_NETWORK)_CORE_PARTITIONING: $(CAL_DEPS) $(PROFILING_DEPS)
	$(PARTITIONING_BIN) $(SW_PARTITIONING_SETTINGS) $(SOURCE_PATH_SETTINGS) --target-path $(SW_PROFILE_TARGET_PATH) $(ENTITY)
ifneq ($(HW_PARTITIONING_SETTINGS),)
$(ENTITY_NETWORK)_CORE_PARTITIONING: $(CAL_DEPS) $(PROFILING_DEPS)
	$(PARTITIONING_BIN) $(HW_PARTITIONING_SETTINGS) $(SW_PARTITIONING_SETTINGS) $(SOURCE_PATH_SETTINGS) --target-path $(SW_PROFILE_TARGET_PATH) $(ENTITY)
endif
endif

# Rule to update the compiler

pull_compiler:
	cd $(SB_HOME)/streamblocks-tycho;git pull;\
	cd $(SB_HOME)/streamblocks-platforms;git pull
install_compiler:
	cd $(SB_HOME)/streamblocks-tycho;git pull;mvn install -DskipTests;\
	cd $(SB_HOME)/streamblocks-platforms;git pull;mvn install


clean:
	rm -r $(TARGET_PATH)