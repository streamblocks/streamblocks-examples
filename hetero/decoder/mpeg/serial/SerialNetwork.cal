namespace hetero.decoder.mpeg.serial:

import entity ch.epfl.mpeg4.part2.Decoder;
import entity ch.epfl.mpeg4.part2.SizeSplitter;
import entity ART.art_Source_bin;
import entity ART.art_Display_yuv_width_height;

    actor Convert() uint(size=8) IN ==> int(size=32) OUT :

        action IN:[token] ==> OUT:[(token as int(size=32))]
        end
    end

    network SerialNetwork() ==> :

        entities
            source = art_Source_bin(fileName="./foreman_qcif_30.bit", loops=0);
            decoder = Decoder() { partition = "hw"; };
            convert = Convert() { partition = "hw"; };
            sizesplitter = SizeSplitter() { partition = "hw"; };
            display = art_Display_yuv_width_height(title="SB", width=176, height=144);
        structure
            source.Out --> decoder.bits;
            decoder.VID --> convert.IN;
            decoder.SIZE --> sizesplitter.IN;
            convert.OUT --> display.In;
            sizesplitter.WIDTH --> display.WIDTH;
            sizesplitter.HEIGHT --> display.HEIGHT;
    end


end
