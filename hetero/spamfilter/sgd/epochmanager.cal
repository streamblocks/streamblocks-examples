namespace hetero.spamfilter.sgd:


  actor EpochManager(type FeatureType, int NUM_EPOCHS,
    int NUM_FEATURES, int NUM_ITERS)
    float FeaturesIn
    ==>
    float FeaturesOut,
    float FeaturesTrained,
    int IterConfig:
    
    // int NUM_ITERS = 4500;
    // int NUM_EPOCHS = 5;
    // int NUM_FEATURES = 1024;
    // int NUM_EPOCHS = 5;
    int epoch_counter := 0;
    int token_idx := 0;
    
    procedure update_index()
    begin
      if token_idx = NUM_FEATURES - 1 then
        token_idx := 0;
        epoch_counter := epoch_counter + 1;
        // println("Epoch " + epoch_counter);
      else
        token_idx := token_idx + 1;
      end
    end

    loop.init: action ==> IterConfig:[
      [NUM_ITERS : for int i in 0 .. (NUM_EPOCHS - 1)]
    ] repeat NUM_EPOCHS
    guard epoch_counter < NUM_EPOCHS
    do
      // println("Starting training");
    end

    loop.prologue: action ==> FeaturesOut:[0.0]
    guard epoch_counter = 0
    do
      update_index();
    end

    loop.body: action FeaturesIn:[t] ==> FeaturesOut:[t]
    guard epoch_counter != 0 and epoch_counter != NUM_EPOCHS
    do
      update_index();
    end

    loop.epilogue: action FeaturesIn:[t] ==> FeaturesTrained:[t]
    guard epoch_counter = NUM_EPOCHS
    do
      update_index();
    end
    


    schedule fsm s_init:
      s_init(loop.init) --> s_stream;
      s_stream(loop.prologue) --> s_stream;
      s_stream(loop.epilogue) --> s_stream;
      s_stream(loop.body) --> s_stream;

    end


  end
end