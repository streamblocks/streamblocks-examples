namespace fir:
	
	network TopFIRThroughput() ==> :
	var
		float noise = 0.1;
		//List(type:double, size=8) taps = [-0.040609, -0.001628, 0.17853, 0.37665, 0.37665, 0.17853, -0.001628, -0.040609];
		List(type:float, size=64) taps = 
		[
  		  -0.0448093,  0.0322875,   0.0181163,   0.0087615,   0.0056797,
		   0.0086685,  0.0148049,   0.0187190,   0.0151019,   0.0027594,
		  -0.0132676, -0.0232561,  -0.0187804,   0.0006382,   0.0250536,
		   0.0387214,  0.0299817,   0.0002609,  -0.0345546,  -0.0525282,
		  -0.0395620,  0.0000246,   0.0440998,   0.0651867,   0.0479110,
		   0.0000135, -0.0508558,  -0.0736313,  -0.0529380,  -0.0000709,
		   0.0540186,  0.0766746,   0.0540186,  -0.0000709,  -0.0529380,
		  -0.0736313, -0.0508558,   0.0000135,   0.0479110,   0.0651867,
		   0.0440998,  0.0000246,  -0.0395620,  -0.0525282,  -0.0345546,
		   0.0002609,  0.0299817,   0.0387214,   0.0250536,   0.0006382,
		  -0.0187804, -0.0232561,  -0.0132676,   0.0027594,   0.0151019,
		   0.0187190,  0.0148049,   0.0086685,   0.0056797,   0.0087615,
		   0.0181163,  0.0322875,  -0.0448093
	   ];	
	entities
		rand  = Random(limit=false);
		mul   = ConstantMultiply(c = noise);
		add   = Add();
		sine  = Sine(d = 0.01);
		fir  = FIR(taps = taps, nUnits = 4) {partition = "hw";};
		thro = ThroughputInMbit(seconds = 5);
	structure
		rand.Out --> mul.In;
		rand.Out --> sine.In;
		mul.Out --> add.A;
		sine.Out --> add.B;
		
		add.Out --> fir.In;
		fir.Out --> thro.In;
	end
	

end