// dataSource.cal
//
// Copyright (c) 2013 University of Oulu, Finland
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.
//
// Author: 
// Jani Boutellier (jani.boutellier@ee.oulu.fi)
// Department of Computer Science and Engineering
// University of Oulu, Finland
//
// Description:
// Data source for a Digital Predistortion Filter. Based on the C code 
// implementation written by Amanullah Ghazi. Related publication: "Mobile 
// Transmitter Digital Predistortion: Feasibility Analysis, Algorithms
// and Design Exploration" at Asilomar 2013.
//
// Changelog:
// - initial version 23/08/2013
// - cleanup 16/12/2013

namespace dpd:

import all std.io.source;

actor datasource(String fileName_ii, String fileName_iq)
// Inputs: 
 
// Outputs:
==> 
float i_out,
float q_out
:
	initialize ==> 
	do
		source_init_dpd(fileName_ii, fileName_iq);
	end
	
	action ==> i_out:[ source_read_i() ], q_out:[ source_read_q() ]
	end

end


end
